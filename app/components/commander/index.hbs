<div class="panel commander col m-2 p-2 user-select-none"
  {{droppable
    onDrop=this.onDrop
    onDragOver=this.onDragOver
    onDragEnter=this.onDragEnter
    onDragLeave=this.onDragLeave}}

  {{uiSelect view_mode=this.view_mode enabled_on='grid'}}
  {{contextMenu}}>

  {{#if (is_equal this.view_mode 'grid')}}
    <!-- ui select is enabled only in grid mode -->
    <UiSelect />
  {{/if}}

  <Commander::ContextMenu
    @openNewFolderModal={{this.openNewFolderModal}}
    @openConfirmDeletionModal={{this.openConfirmDeletionModal}}
    @openTagsModal={{this.openTagsModal}}
    @onSelectionChanged={{this.onSelectionChanged}}
    @nodes={{this.children}}
    @selectedNodes={{this.selected_nodes}}
    @onDownloadNodes={{this.onDownloadNodes}}
    @openRenameModal={{this.openRenameModal}} />

  <div class="d-flex justify-content-between">
    <Commander::ActionButtons
      @openNewFolderModal={{this.openNewFolderModal}}
      @openRenameModal={{this.openRenameModal}}
      @openConfirmDeletionModal={{this.openConfirmDeletionModal}}
      @openTagsModal={{this.openTagsModal}}
      @onCreateDocumentModel={{this.onCreateDocumentModel}}
      @onDownloadNodes={{this.onDownloadNodes}}
      @selectedNodes={{this.selected_nodes}}
      @lang={{this.lang}}
      @node={{@node}} />

    <Commander::ActionModes
      @onPanelToggle={{@onPanelToggle}}
      @dualPanelMode={{@dualPanelMode}}
      @onViewModeChange={{this.onViewModeChange}}
      @viewMode={{this.view_mode}}
      @hint={{@hint}}
      @onSwapPanels={{@onSwapPanels}}
      @onDuplicatePanel={{@onDuplicatePanel}} />
  </div>

  <Modal::NewFolder
    id="new-folder"
    @node={{@node}}
    @onClose={{this.closeNewFolderModal}}
    {{show-when this.show_new_folder_modal}} />

  <Modal::RenameNode
    @node={{this.first_selected_node}}
    @onClose={{this.onCloseRenameModal}}
    {{show-when this.show_rename_node_modal}} />

  <Modal::DeleteNode
    id="delete-node"
    @selectedNodes={{this.selected_nodes}}
    @onClose={{this.closeConfirmDeletionModal}}
    {{show-when this.show_confirm_deletion_modal}} />

  <Modal::MovePages
    id="move-pages"
    @page_ids={{this.move_pages_modal_page_ids}}
    @dst_folder={{this.move_pages_modal_dst_folder}}
    @onSubmit={{this.onSubmitMovePages}}
    {{show-when this.show_confirm_move_pages_modal}} />

  <Modal::Tags
    @node={{this.first_selected_node}}
    @onSubmit={{this.onSubmitTagsModal}}
    @onCancel={{this.onCancelTagsModal}}
    {{show-when this.show_tags_modal}}/>

  <Breadcrumb
    @node={{@node}}
    @extranode={{@extranode}}
    @extradoc={{@extradoc}}
    @onNodeClicked={{this.onNodeClicked}}
    @hint={{@hint}} />

  <DualPagination
    @pages={{setup_pagination_pages @pagination.page @pagination.pages}}
    @hint={{@hint}} />


  {{#if this.is_empty_folder }}
    <div class="view-mode-list">
      <Commander::EmptyFolder />
    </div>
  {{else}}
    <div class="view-mode-{{this.view_mode}}">
      {{#each this.children as |node|}}
        {{#let (component node.nodeType) as |NodeType|}}
          {{! NodeType is either <Folder /> or <Document />}}
          <NodeType
            @model={{node}}
            @selectedNodes={{this.selected_nodes}}
            @onCheckboxChange={{this.onCheckboxChange}}
            @onDragendSuccess={{this.onDragendSuccess}}
            @onDragendCancel={{this.onDragendCancel}}>
              <DualLinkTo
                @node={{node}}
                @extranode={{@extranode}}
                @extradoc={{@extradoc}}
                @hint={{@hint}}
                {{on "click" this.onNodeClicked}} />
          </NodeType>
        {{/let}}
      {{/each}}
    </div>
  {{/if}}

</div>
